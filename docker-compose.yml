version: "3.9"

services:
  web:
    build: .
    container_name: web_app
    ports:
      - "5000:5000"
    environment:
      VIRTUAL_HOST: book.local
      VIRTUAL_PORT: 5000
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: app_db
      DATABASE_USER: app_user
      DATABASE_PASSWORD: app_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - nginx-net
    command: ["python", "app.py"] 

  db:
    image: postgres:12-alpine
    container_name: db
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - nginx-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nginx-net
    restart: unless-stopped

  nginx:
    image: jwilder/nginx-proxy
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - nginx-net

volumes:
  pgdata:
  redis-data:

networks:
  nginx-net:
    driver: bridge
